// lib/utils/constants.dart

/// App-wide constants for configuration and strings
class AppConstants {
  // ========== API CONFIGURATION ==========

  /// Base URL for API - should match api_service.dart
  static const String apiBaseUrl = 'http://localhost:3000/api';

  /// API timeout duration
  static const Duration apiTimeout = Duration(seconds: 30);

  /// API retry attempts
  static const int maxRetryAttempts = 3;

  /// API retry delay
  static const Duration retryDelay = Duration(seconds: 2);

  // ========== PAGINATION SETTINGS ==========

  /// Default number of articles per page
  static const int defaultPageSize = 20;

  /// Maximum number of articles per page
  static const int maxPageSize = 100;

  /// Minimum number of articles per page
  static const int minPageSize = 5;

  /// Load more threshold (pixels from bottom)
  static const double loadMoreThreshold = 200.0;

  // ========== IMAGE SETTINGS ==========

  /// Default height for featured article images
  static const double defaultImageHeight = 200.0;

  /// Height for thumbnail images in article cards
  static const double thumbnailImageHeight = 80.0;

  /// Width for thumbnail images in article cards
  static const double thumbnailImageWidth = 100.0;

  /// Image cache duration
  static const Duration imageCacheDuration = Duration(days: 7);

  /// Default placeholder image URL
  static const String placeholderImageUrl = 'https://via.placeholder.com/400x300/E0E0E0/757575?text=No+Image';

  // ========== UI DIMENSIONS ==========

  /// Default padding for containers
  static const double defaultPadding = 16.0;

  /// Small padding
  static const double smallPadding = 8.0;

  /// Large padding
  static const double largePadding = 24.0;

  /// Extra large padding
  static const double extraLargePadding = 32.0;

  /// Default border radius
  static const double defaultRadius = 8.0;

  /// Small border radius
  static const double smallRadius = 4.0;

  /// Large border radius
  static const double largeRadius = 12.0;

  /// Card elevation
  static const double cardElevation = 2.0;

  /// App bar elevation
  static const double appBarElevation = 2.0;

  // ========== ANIMATION DURATIONS ==========

  /// Short animation duration
  static const Duration shortAnimation = Duration(milliseconds: 200);

  /// Medium animation duration
  static const Duration mediumAnimation = Duration(milliseconds: 300);

  /// Long animation duration
  static const Duration longAnimation = Duration(milliseconds: 500);

  /// Page transition duration
  static const Duration pageTransition = Duration(milliseconds: 250);

  // ========== CATEGORIES - VNEXPRESS STYLE ==========

  /// Default categories list
  static const List<String> defaultCategories = [
    'T·∫•t c·∫£',
    'Th·ªùi s·ª±',
    'Th·∫ø gi·ªõi',
    'Kinh doanh',
    'Khoa h·ªçc c√¥ng ngh·ªá',
    'Gi·∫£i tr√≠',
    'Th·ªÉ thao',
    'Ph√°p lu·∫≠t',
    'Gi√°o d·ª•c',
    'S·ª©c kh·ªèe',
    'ƒê·ªùi s·ªëng',
    'Du l·ªãch',
    'Xe',
    '√ù ki·∫øn'
  ];

  /// Category icons mapping
  static const Map<String, String> categoryIcons = {
    'T·∫•t c·∫£': 'üè†',
    'Th·ªùi s·ª±': 'üì∞',
    'Th·∫ø gi·ªõi': 'üåç',
    'Kinh doanh': 'üíº',
    'Khoa h·ªçc c√¥ng ngh·ªá': 'üî¨',
    'Gi·∫£i tr√≠': 'üé≠',
    'Th·ªÉ thao': '‚öΩ',
    'Ph√°p lu·∫≠t': '‚öñÔ∏è',
    'Gi√°o d·ª•c': 'üìö',
    'S·ª©c kh·ªèe': 'üè•',
    'ƒê·ªùi s·ªëng': 'üè°',
    'Du l·ªãch': '‚úàÔ∏è',
    'Xe': 'üöó',
    '√ù ki·∫øn': 'üí≠'
  };

  // ========== SOURCES ==========

  /// Default news sources
  static const List<String> defaultSources = [
    'T·∫•t c·∫£',
    'D√¢n Tr√≠',
    'VnExpress'
  ];

  /// Source colors for badges
  static const Map<String, int> sourceColors = {
    'dantri': 0xFF1976D2,      // Blue
    'vnexpress': 0xFFB52D3D,   // VnExpress Red
  };

  /// Source short names for badges
  static const Map<String, String> sourceShortNames = {
    'dantri': 'DT',
    'vnexpress': 'VE',
  };

  // ========== DATE FILTERS ==========

  /// Date filter options
  static const Map<String, String> dateFilters = {
    'all': 'T·∫•t c·∫£ th·ªùi gian',
    'today': 'H√¥m nay',
    'week': 'Tu·∫ßn n√†y',
    'month': 'Th√°ng n√†y',
    'year': 'NƒÉm nay',
  };

  /// Date filter icons
  static const Map<String, String> dateFilterIcons = {
    'all': 'üìÖ',
    'today': 'üìã',
    'week': 'üìä',
    'month': 'üìà',
    'year': 'üìâ',
  };

  // ========== CACHE SETTINGS ==========

  /// Cache expiration time for articles
  static const Duration articleCacheExpiration = Duration(minutes: 30);

  /// Cache expiration time for stats
  static const Duration statsCacheExpiration = Duration(minutes: 15);

  /// Cache expiration time for categories/sources
  static const Duration metadataCacheExpiration = Duration(hours: 24);

  /// Maximum cache size (number of items)
  static const int maxCacheSize = 1000;

  // ========== SEARCH SETTINGS ==========

  /// Minimum search query length
  static const int minSearchQueryLength = 2;

  /// Maximum search query length
  static const int maxSearchQueryLength = 100;

  /// Search debounce duration
  static const Duration searchDebounce = Duration(milliseconds: 500);

  /// Maximum search results
  static const int maxSearchResults = 50;

  // ========== BREAKING NEWS ==========

  /// Time window for breaking news (in hours)
  static const int breakingNewsHours = 2;

  /// Minimum view count for trending news
  static const int trendingViewThreshold = 10000;

  // ========== SHARING ==========

  /// App share text template
  static const String shareTextTemplate = 'ƒê·ªçc tin t·ª©c t·ª´ {title} - {url}';

  /// Share hashtags
  static const List<String> shareHashtags = [
    '#TinT·ª©c',
    '#VnExpress',
    '#D√¢nTr√≠',
    '#NewsApp'
  ];

  // ========== NOTIFICATION SETTINGS ==========

  /// Breaking news notification channel
  static const String breakingNewsChannelId = 'breaking_news';

  /// General news notification channel
  static const String generalNewsChannelId = 'general_news';

  /// Notification icon
  static const String notificationIcon = '@mipmap/ic_launcher';

  // ========== ANALYTICS ==========

  /// Events tracking
  static const Map<String, String> analyticsEvents = {
    'articleRead': 'article_read',
    'articleShare': 'article_share',
    'categoryFilter': 'category_filter',
    'sourceFilter': 'source_filter',
    'search': 'search_query',
    'refresh': 'refresh_data',
  };

  // ========== FEATURE FLAGS ==========

  /// Enable offline mode
  static const bool enableOfflineMode = true;

  /// Enable push notifications
  static const bool enablePushNotifications = true;

  /// Enable article bookmarking
  static const bool enableBookmarks = true;

  /// Enable dark mode
  static const bool enableDarkMode = true;

  /// Enable analytics
  static const bool enableAnalytics = false;

  /// Enable crash reporting
  static const bool enableCrashReporting = false;

  // ========== DEVELOPMENT ==========

  /// Debug mode flag
  static const bool isDebugMode = bool.fromEnvironment('DEBUG', defaultValue: false);

  /// Show debug info
  static const bool showDebugInfo = bool.fromEnvironment('DEBUG_INFO', defaultValue: false);

  /// Enable API logging
  static const bool enableApiLogging = bool.fromEnvironment('DEBUG_API', defaultValue: false);

  /// Mock data for testing
  static const bool useMockData = bool.fromEnvironment('MOCK_DATA', defaultValue: false);

  // ========== LIMITS ==========

  /// Maximum title length for display
  static const int maxTitleLength = 200;

  /// Maximum summary length for display
  static const int maxSummaryLength = 500;

  /// Maximum content length for display
  static const int maxContentLength = 10000;

  /// Maximum tags per article
  static const int maxTagsPerArticle = 10;

  /// Maximum recent searches to store
  static const int maxRecentSearches = 20;

  // ========== VALIDATION ==========

  /// URL validation regex
  static const String urlRegex = r'^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)$';

  /// Vietnamese text validation regex
  static const String vietnameseTextRegex = r'^[a-zA-Z√Ä√Å√Ç√É√à√â√ä√å√ç√í√ì√î√ï√ô√öƒÇƒêƒ®≈®∆†√†√°√¢√£√®√©√™√¨√≠√≤√≥√¥√µ√π√∫ƒÉƒëƒ©≈©∆°∆ØƒÇ·∫†·∫¢·∫§·∫¶·∫®·∫™·∫¨·∫Æ·∫∞·∫≤·∫¥·∫∂·∫∏·∫∫·∫º·ªÄ·ªÄ·ªÇ∆∞ƒÉ·∫°·∫£·∫•·∫ß·∫©·∫´·∫≠·∫Ø·∫±·∫≥·∫µ·∫∑·∫π·∫ª·∫Ω·ªÅ·ªÅ·ªÉ·ªÑ·ªÜ·ªà·ªä·ªå·ªé·ªê·ªí·ªî·ªñ·ªò·ªö·ªú·ªû·ª†·ª¢·ª§·ª¶·ª®·ª™·ªÖ·ªá·ªâ·ªã·ªç·ªè·ªë·ªì·ªï·ªó·ªô·ªõ·ªù·ªü·ª°·ª£·ª•·ªß·ª©·ª´·ª¨·ªÆ·ª∞·ª≤·ª¥√ù·ª∂·ª∏·ª≠·ªØ·ª±·ª≥·ªµ√Ω·ª∑·ªπ\s\d\.,;:!?\-()]+$';

  // ========== PERFORMANCE ==========

  /// List scroll physics
  static const String listScrollPhysics = 'platform'; // 'platform', 'bouncing', 'clamping'

  /// Image loading fade duration
  static const Duration imageFadeDuration = Duration(milliseconds: 300);

  /// Refresh indicator displacement
  static const double refreshIndicatorDisplacement = 40.0;

  /// Maximum concurrent image loads
  static const int maxConcurrentImageLoads = 10;
}

/// App-wide string constants for localization
class AppStrings {
  // ========== APP INFO ==========

  static const String appName = 'H·ªá th·ªëng T√≤a so·∫°n ƒêi·ªán t·ª≠';
  static const String appSubtitle = 'VnNews by Nam';
  static const String appVersion = '1.0.0';
  static const String appDescription = '·ª®ng d·ª•ng t·ªïng h·ª£p tin t·ª©c t·ª´ c√°c ngu·ªìn uy t√≠n';

  // ========== NAVIGATION ==========

  static const String dashboard = 'Trang ch·ªß';
  static const String search = 'T√¨m ki·∫øm';
  static const String categories = 'Danh m·ª•c';
  static const String bookmarks = 'ƒê√£ l∆∞u';
  static const String settings = 'C√†i ƒë·∫∑t';
  static const String about = 'V·ªÅ ·ª©ng d·ª•ng';

  // ========== ACTIONS ==========

  static const String refresh = 'L√†m m·ªõi';
  static const String retry = 'Th·ª≠ l·∫°i';
  static const String cancel = 'H·ªßy';
  static const String ok = 'ƒê·ªìng √Ω';
  static const String yes = 'C√≥';
  static const String no = 'Kh√¥ng';
  static const String close = 'ƒê√≥ng';
  static const String back = 'Quay l·∫°i';
  static const String next = 'Ti·∫øp theo';
  static const String previous = 'Tr∆∞·ªõc ƒë√≥';
  static const String save = 'L∆∞u';
  static const String delete = 'X√≥a';
  static const String edit = 'Ch·ªânh s·ª≠a';
  static const String share = 'Chia s·∫ª';
  static const String copy = 'Sao ch√©p';
  static const String bookmark = 'L∆∞u b√†i';
  static const String unbookmark = 'B·ªè l∆∞u';
  static const String readOriginal = 'ƒê·ªçc b√†i g·ªëc';
  static const String viewSummary = 'Xem t√≥m t·∫Øt';
  static const String loadMore = 'T·∫£i th√™m';

  // ========== LABELS ==========

  static const String category = 'Danh m·ª•c';
  static const String source = 'Ngu·ªìn';
  static const String author = 'T√°c gi·∫£';
  static const String publishDate = 'Th·ªùi gian';
  static const String viewCount = 'l∆∞·ª£t xem';
  static const String tags = 'T·ª´ kh√≥a';
  static const String summary = 'T√≥m t·∫Øt';
  static const String content = 'N·ªôi dung';
  static const String image = 'H√¨nh ·∫£nh';
  static const String url = 'Li√™n k·∫øt';

  // ========== PLACEHOLDERS ==========

  static const String searchPlaceholder = 'T√¨m ki·∫øm b√†i vi·∫øt...';
  static const String noResults = 'Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£';
  static const String noData = 'Kh√¥ng c√≥ d·ªØ li·ªáu';
  static const String noImage = 'Kh√¥ng c√≥ h√¨nh ·∫£nh';
  static const String loading = 'ƒêang t·∫£i...';
  static const String loadingMore = 'ƒêang t·∫£i th√™m...';
  static const String refreshing = 'ƒêang l√†m m·ªõi...';

  // ========== ERROR MESSAGES ==========

  static const String networkError = 'Kh√¥ng c√≥ k·∫øt n·ªëi internet';
  static const String serverError = 'L·ªói m√°y ch·ªß';
  static const String timeoutError = 'K·∫øt n·ªëi qu√° th·ªùi gian ch·ªù';
  static const String dataError = 'D·ªØ li·ªáu kh√¥ng h·ª£p l·ªá';
  static const String unknownError = 'L·ªói kh√¥ng x√°c ƒë·ªãnh';
  static const String connectionError = 'L·ªói k·∫øt n·ªëi. Vui l√≤ng ki·ªÉm tra m·∫°ng v√† th·ª≠ l·∫°i.';
  static const String loadError = 'Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu';
  static const String searchError = 'L·ªói t√¨m ki·∫øm';
  static const String refreshError = 'Kh√¥ng th·ªÉ l√†m m·ªõi d·ªØ li·ªáu';
  static const String saveError = 'Kh√¥ng th·ªÉ l∆∞u';
  static const String shareError = 'Kh√¥ng th·ªÉ chia s·∫ª';
  static const String permissionError = 'Kh√¥ng c√≥ quy·ªÅn truy c·∫≠p';

  // ========== SUCCESS MESSAGES ==========

  static const String refreshSuccess = 'D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t';
  static const String loadSuccess = 'T·∫£i d·ªØ li·ªáu th√†nh c√¥ng';
  static const String saveSuccess = 'ƒê√£ l∆∞u th√†nh c√¥ng';
  static const String shareSuccess = 'ƒê√£ chia s·∫ª th√†nh c√¥ng';
  static const String bookmarkAdded = 'ƒê√£ th√™m v√†o danh s√°ch l∆∞u';
  static const String bookmarkRemoved = 'ƒê√£ x√≥a kh·ªèi danh s√°ch l∆∞u';

  // ========== TIME FORMATS ==========

  static const String justNow = 'V·ª´a xong';
  static const String minutesAgo = 'ph√∫t tr∆∞·ªõc';
  static const String hoursAgo = 'gi·ªù tr∆∞·ªõc';
  static const String daysAgo = 'ng√†y tr∆∞·ªõc';
  static const String weeksAgo = 'tu·∫ßn tr∆∞·ªõc';
  static const String monthsAgo = 'th√°ng tr∆∞·ªõc';
  static const String yearsAgo = 'nƒÉm tr∆∞·ªõc';
  static const String today = 'H√¥m nay';
  static const String yesterday = 'H√¥m qua';
  static const String tomorrow = 'Ng√†y mai';

  // ========== STATISTICS ==========

  static const String totalArticles = 'T·ªïng b√†i vi·∫øt';
  static const String totalViews = 'T·ªïng l∆∞·ª£t xem';
  static const String topCategory = 'Ch·ªß ƒë·ªÅ hot';
  static const String todayArticles = 'B√†i vi·∫øt h√¥m nay';
  static const String featuredNews = 'Tin n·ªïi b·∫≠t';
  static const String latestNews = 'Tin m·ªõi nh·∫•t';
  static const String breakingNews = 'Tin n√≥ng';
  static const String trendingNews = 'Tin th·ªãnh h√†nh';

  // ========== FILTERS ==========

  static const String allCategories = 'T·∫•t c·∫£ danh m·ª•c';
  static const String allSources = 'T·∫•t c·∫£ ngu·ªìn';
  static const String allTime = 'T·∫•t c·∫£ th·ªùi gian';
  static const String filterBy = 'L·ªçc theo';
  static const String sortBy = 'S·∫Øp x·∫øp theo';
  static const String newest = 'M·ªõi nh·∫•t';
  static const String oldest = 'C≈© nh·∫•t';
  static const String mostViewed = 'Nhi·ªÅu l∆∞·ª£t xem';
  static const String leastViewed = '√çt l∆∞·ª£t xem';

  // ========== NOTIFICATIONS ==========

  static const String notificationTitle = 'Tin t·ª©c m·ªõi';
  static const String breakingNewsTitle = 'Tin n√≥ng';
  static const String notificationPermission = 'Cho ph√©p th√¥ng b√°o ƒë·ªÉ nh·∫≠n tin t·ª©c m·ªõi nh·∫•t';
  static const String notificationSettings = 'C√†i ƒë·∫∑t th√¥ng b√°o';

  // ========== OFFLINE ==========

  static const String offlineMode = 'Ch·∫ø ƒë·ªô ngo·∫°i tuy·∫øn';
  static const String offlineMessage = 'B·∫°n ƒëang ·ªü ch·∫ø ƒë·ªô ngo·∫°i tuy·∫øn';
  static const String connectToInternet = 'K·∫øt n·ªëi internet ƒë·ªÉ c·∫≠p nh·∫≠t tin t·ª©c m·ªõi';
  static const String cachedContent = 'N·ªôi dung ƒë∆∞·ª£c l∆∞u tr·ªØ';

  // ========== DEVELOPMENT ==========

  static const String debugMode = 'Ch·∫ø ƒë·ªô debug';
  static const String testData = 'D·ªØ li·ªáu test';
  static const String mockMode = 'Ch·∫ø ƒë·ªô gi·∫£ l·∫≠p';
  static const String apiStatus = 'Tr·∫°ng th√°i API';
  static const String connected = 'ƒê√£ k·∫øt n·ªëi';
  static const String disconnected = 'M·∫•t k·∫øt n·ªëi';

  // ========== ACCESSIBILITY ==========

  static const String articleImage = 'H√¨nh ·∫£nh b√†i vi·∫øt';
  static const String sourceBadge = 'Ngu·ªìn tin';
  static const String categoryBadge = 'Danh m·ª•c';
  static const String shareButton = 'N√∫t chia s·∫ª';
  static const String bookmarkButton = 'N√∫t l∆∞u b√†i';
  static const String backButton = 'N√∫t quay l·∫°i';
  static const String searchButton = 'N√∫t t√¨m ki·∫øm';
  static const String refreshButton = 'N√∫t l√†m m·ªõi';
  static const String menuButton = 'N√∫t menu';
}